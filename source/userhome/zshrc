# FEATURES
autoload -Uz zmv                # Load zmv function
autoload -Uz compinit           # Load compinit function
compinit                        # Initialize completion system
autoload -Uz edit-command-line  # Load edit-command-line function
zle -N edit-command-line        # Bind edit-command-line to zle


# COMPLETIONS
zstyle ':completion:*' completer _complete _ignored                                 # Order of completion functions
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}                               # Colors for completion from LS_COLORS
zstyle ':completion:*' matcher-list 'm:{[:lower:]}={[:upper:]}' '+r:|[._-]=* r:|=*' # Matching rules for completion
zstyle :compinstall filename '/home/axl/.zshrc'i                                    # Completion configuration file


# KEY BINDINGS
bindkey -v                           # Enable vi keybindings in zsh
bindkey -M vicmd E edit-command-line # Map 'E' to edit command line


# OPTIONS
setopt append_history          # Append to history file
setopt auto_cd                 # Change directory without 'cd'
setopt auto_list               # List choices on ambiguous completion
setopt auto_menu               # Autoselect from completion list
setopt bang_hist               # Enable '!' history expansion
setopt complete_in_word        # Complete in the middle of words
setopt correct                 # Correct command spelling
setopt extended_history        # Save timestamp in history
setopt hist_expire_dups_first  # Expire duplicate history entries first
setopt hist_find_no_dups       # No duplicates in history search
setopt hist_ignore_all_dups    # Ignore all duplicate history entries
setopt hist_ignore_space       # Ignore commands starting with space
setopt multi_os                # Enable multi-OS compatibility
setopt no_beep                 # Disable beep sound
setopt pushd_ignore_dups       # No duplicate directories in stack
setopt pushd_silent            # No output for pushd/popd
setopt pushd_to_home           # 'pushd' with no args to home
setopt share_history           # Share history across sessions
setopt short_loops             # Shorten loops with 'do' keyword


# ENVIRONMENT VARIABLES AND EXPORTS
HISTFILE=${HOME}/.zsh_history  # History file location
HISTSIZE=5000                  # Max history entries in memory
SAVEHIST=2500                  # Max history entries on disk
export SAVEHIST                # Export SAVEHIST variable
export GPG_TTY=$(tty)          # Read GPG password from current terminal
if [[ -x $(which nvim 2> /dev/null) ]] {
    EDITOR=$(which nvim)       # Set Neovim as default editor
    VISUAL=${EDITOR}           # Set Neovim as default visual editor
} elif [[ -x $(which vim 2> /dev/null) ]] {
    EDITOR=$(which vim)        # Set Vim as default editor
    VISUAL=${EDITOR}           # Set Vim as default visual editor
} elif [[ -x $(which vi 2> /dev/null) ]] {
    EDITOR=$(which vi)         # Set Vi as default editor
    VISUAL=${EDITOR}           # Set Vi as default visual editor
}
[[ -x $(which erl > /dev/null 2> /dev/null) ]] && export ERL_AFLAGS="-kernel shell_history enabled"


# ZSH CONFIGURATIONS
# This zsh hook is called before a command is added to the history.
zshaddhistory() {
    emulate -L zsh             # Emulate zsh, local scope
    setopt extendedglob        # Enable extended globbing

    # Ignore specific commands from history
    if [[ $1 == (#b)(alias|bat|btop|cat|cd|fd|find|exit|head|history|htop|ipython|jupyter|locate|man|nvtop|pwd|tail|top|which|who)* ]] {
        return 1               # Do not add to history
    }

    return 0                   # Add to history
}


# APPLICATIONS
[[ -f ~/.fzf.zsh ]] && source ~/.fzf.zsh
[[ -f $HOME/.asdf/asdf.sh ]] && source $HOME/.asdf/asdf.sh
[[ -f $HOME/.local/bin/z.sh ]] && source $HOME/.local/bin/z.sh
[[ -f /opt/conda/etc/profile.d/conda.sh ]] && source /opt/conda/etc/profile.d/conda.sh
[[ -x $(which uv 2> /dev/null) ]] && eval "$(uv generate-shell-completion zsh)"
[[ -x $(which uvx 2> /dev/null) ]] && eval "$(uvx --generate-shell-completion zsh)"


# CONFIGURATIONS
[[ -f $HOME/.zshfunction ]] && source $HOME/.zshfunction
[[ -f $HOME/.zshalias ]] && source $HOME/.zshalias
[[ -f $HOME/.zshprompt ]] && source $HOME/.zshprompt

