# COMPLETIONS
zstyle ':completion:*' completer _complete _ignored
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
zstyle ':completion:*' matcher-list 'm:{[:lower:]}={[:upper:]}' '+r:|[._-]=* r:|=*'
zstyle :compinstall filename '/home/axl/.zshrc'i
autoload -Uz compinit
compinit


# FEATURES
autoload -Uz edit-command-line
zle -N edit-command-line
bindkey -M vicmd v edit-command-line
autoload -Uz zmv


# OPTIONS
setopt append_history
setopt auto_cd
setopt auto_list
setopt auto_menu
setopt bang_hist
setopt complete_in_word
setopt correct
setopt extended_history
setopt hist_expire_dups_first
setopt hist_find_no_dups
setopt hist_ignore_space
setopt hist_ignore_all_dups
setopt multi_os
setopt no_beep
setopt pushd_ignore_dups
setopt pushd_silent
setopt pushd_to_home
setopt share_history
setopt short_loops
bindkey -v


# ENVIRONMENT VARIABLES AND EXPORTS
HISTFILE=${HOME}/.zsh_history
HISTSIZE=49999
SAVEHIST=49949
export SAVEHIST
export GPG_TTY=$(tty)
[[ -x $(which erl > /dev/null 2>&1) ]] && export ERL_AFLAGS="-kernel shell_history enabled"


# ZSH CONFIGURATIONS
# Ignore specific commands from history
zshaddhistory() {
    emulate -L zsh
    setopt extendedglob

    if [[ $1 == (#b)(bat|btop|cat|cd|find|exit|history|htop|ls|locate|man|pushd|popd|tail|top|tree|updatedb)* ]]; then
        # Do not add to history
        return 1
    fi

    # Add to history
    return 0
}


# APPLICATIONS
[[ -f ~/.fzf.zsh ]] && source ~/.fzf.zsh
[[ -f $HOME/.asdf/asdf.sh ]] && source $HOME/.asdf/asdf.sh
[[ -f $HOME/.local/bin/z.sh ]] && source $HOME/.local/bin/z.sh
[[ -f /opt/conda/etc/profile.d/conda.sh ]] && source /opt/conda/etc/profile.d/conda.sh


# ASDF
if [[ "$(type -w asdf)" == "asdf: function" ]] {
    # ENVIRONMENT VARIABLES AND EXPORTS
    # [[ -x $(asdf which java) ]] && source ~/.asdf/plugins/java/set-java-home.zsh

    # DEFAULTS
    if [[ -x $(asdf which nvim 2> /dev/null) ]] {
        EDITOR=$(asdf which nvim)
        VISUAL=$(asdf which nvim)
    }
}


# CONFIGURATIONS
[[ -f $HOME/.zshfunction ]] && source $HOME/.zshfunction
[[ -f $HOME/.zshalias ]] && source $HOME/.zshalias
[[ -f $HOME/.zshprompt ]] && source $HOME/.zshprompt

